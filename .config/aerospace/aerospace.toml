# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
  'exec-and-forget sketchybar --hotload',
  "exec-and-forget ~/git_repos/dotfiles/.config/aerospace/bin/open_apps.py",
]

exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = [{ monitor."Built-in Retina Display" = 10 }, 10]
inner.vertical = [{ monitor."Built-in Retina Display" = 10 }, 10]
outer.left = 5
outer.bottom = 5
outer.top = 5
outer.right = 5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
alt-enter = 'exec-and-forget open -n /Applications/Alacritty.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-slash = 'layout tiles horizontal vertical'
# alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'exec-and-forget aerospace focus left && aerospace move-mouse window-lazy-center'
# alt-j = 'focus down'
# alt-k = 'focus up'
alt-l = 'exec-and-forget aerospace focus right && aerospace move-mouse window-lazy-center'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
# alt-shift-j = 'move down'
# alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'
alt-shift-0 = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-a = 'workspace --auto-back-and-forth A'
ctrl-alt-b = 'workspace --auto-back-and-forth B'
ctrl-alt-c = 'workspace --auto-back-and-forth C'
ctrl-alt-d = 'workspace --auto-back-and-forth D'
ctrl-alt-m = 'workspace --auto-back-and-forth M'
# ctrl-alt-n = 'workspace --auto-back-and-forth N'
ctrl-alt-s = 'workspace --auto-back-and-forth S'
ctrl-alt-t = 'workspace --auto-back-and-forth T'
ctrl-alt-z = 'workspace --auto-back-and-forth Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-a = 'move-node-to-workspace A --focus-follows-window'
alt-shift-b = 'move-node-to-workspace B --focus-follows-window'
alt-shift-c = 'move-node-to-workspace C --focus-follows-window'
alt-shift-d = 'move-node-to-workspace D --focus-follows-window'
alt-shift-m = 'move-node-to-workspace M --focus-follows-window'
# alt-shift-n = 'move-node-to-workspace N --focus-follows-window'
alt-shift-p = 'move-node-to-workspace P --focus-follows-window'
alt-shift-s = 'move-node-to-workspace S --focus-follows-window'
alt-shift-t = 'move-node-to-workspace T --focus-follows-window'
alt-shift-z = 'move-node-to-workspace Z --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

ctrl-shift-t = 'exec-and-forget ~/git_repos/dotfiles/.config/aerospace/bin/return_tiled_app.py'
cmd-q = 'close --quit-if-last-window'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# app assignments
# to find the app ids run `aerospace list-apps`
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'org.alacritty'
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = "move-node-to-workspace Z"

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.apple.Passwords'
run = "move-node-to-workspace P"

[[on-window-detected]]
if.app-id = 'com.apple.Finder'
run = 'layout floating'

[[on-window-detected]]
if.window-title-regex-substring = 'Vivaldi Settings'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'
